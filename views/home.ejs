<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Library Management System</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            color: white;
        }

        .header h1 {
            font-size: 3rem;
            font-weight: 700;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .header p {
            font-size: 1.2rem;
            opacity: 0.9;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            text-align: center;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 40px rgba(0,0,0,0.15);
        }

        .stat-icon {
            font-size: 3rem;
            margin-bottom: 15px;
            background: linear-gradient(45deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 700;
            color: #333;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 1rem;
            color: #666;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .controls-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
        }

        .controls-grid {
            display: grid;
            grid-template-columns: 2fr 1fr 1fr;
            gap: 20px;
            align-items: end;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            font-weight: 600;
            margin-bottom: 8px;
            color: #333;
        }

        .form-control {
            padding: 12px 16px;
            border: 2px solid #e1e5e9;
            border-radius: 12px;
            font-size: 1rem;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
            background: white;
        }

        .form-control:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 12px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            font-size: 0.95rem;
        }

        .btn-primary {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .btn-success {
            background: linear-gradient(45deg, #56ab2f, #a8e6cf);
            color: white;
        }

        .btn-info {
            background: linear-gradient(45deg, #3498db, #74b9ff);
            color: white;
        }

        .btn-danger {
            background: linear-gradient(45deg, #e74c3c, #fd79a8);
            color: white;
        }

        .btn-sm {
            padding: 8px 16px;
            font-size: 0.85rem;
        }

        .books-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .section-title {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 25px;
            color: #333;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        #booksContainer {
            min-height: auto;
            position: relative;
            transition: all 0.3s ease;
        }

        .books-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px;
            min-height: auto;
            transition: opacity 0.2s ease;
        }

        .books-grid.loading {
            opacity: 0.6;
            pointer-events: none;
        }

        .book-card {
            background: white;
            border-radius: 12px;
            padding: 18px;
            box-shadow: 0 3px 15px rgba(0,0,0,0.08);
            transition: transform 0.3s ease, box-shadow 0.3s ease, opacity 0.3s ease;
            border: 1px solid #f0f0f0;
            opacity: 1;
            transform: translateY(0);
        }

        .book-card.fade-in {
            animation: fadeInUp 0.4s ease forwards;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .book-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 15px;
        }

        .book-title {
            font-size: 1.1rem;
            font-weight: 700;
            color: #333;
            margin-bottom: 4px;
        }

        .book-author {
            color: #666;
            font-size: 0.9rem;
            margin-bottom: 8px;
        }

        .book-status {
            padding: 4px 10px;
            border-radius: 16px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-available {
            background: #d4edda;
            color: #155724;
        }

        .status-issued {
            background: #fff3cd;
            color: #856404;
        }

        .book-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 8px;
            margin-bottom: 12px;
            font-size: 0.85rem;
        }

        .book-detail {
            display: flex;
            align-items: center;
            gap: 6px;
            color: #666;
        }

        .book-description {
            color: #777;
            font-size: 0.85rem;
            line-height: 1.3;
            margin-bottom: 12px;
            font-style: italic;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            max-height: calc(1.3em * 2);
        }

        .book-actions {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .add-book-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
            margin-top: 40px;
        }

        .add-book-form {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
        }

        .form-row-full {
            grid-column: 1 / -1;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background-color: white;
            margin: 10% auto;
            padding: 30px;
            border-radius: 20px;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover {
            color: #000;
        }

        .no-books {
            text-align: center;
            padding: 40px 20px;
            color: #666;
            min-height: auto;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .no-books i {
            font-size: 3rem;
            margin-bottom: 15px;
            opacity: 0.5;
        }

        @media (max-width: 768px) {
            .container {
                padding: 15px;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .controls-grid {
                grid-template-columns: 1fr;
                gap: 15px;
            }
            
            .books-grid {
                grid-template-columns: 1fr;
            }
            
            .add-book-form {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <h1><i class="fas fa-book-open"></i> Library Management System</h1>
        </div>

        <!-- Statistics Dashboard -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-icon"><i class="fas fa-books"></i></div>
                <div class="stat-number"><%= stats.total %></div>
                <div class="stat-label">Total Books</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon"><i class="fas fa-check-circle"></i></div>
                <div class="stat-number"><%= stats.available %></div>
                <div class="stat-label">Available</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon"><i class="fas fa-hand-holding"></i></div>
                <div class="stat-number"><%= stats.issued %></div>
                <div class="stat-label">Issued</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon"><i class="fas fa-tags"></i></div>
                <div class="stat-number"><%= stats.categories %></div>
                <div class="stat-label">Categories</div>
            </div>
        </div>

        <!-- Search and Filter Controls -->
        <div class="controls-section">
            <div class="controls-grid">
                <div class="form-group">
                    <label for="search"><i class="fas fa-search"></i> Search Books</label>
                    <input type="text" id="search" name="search" class="form-control" 
                           placeholder="Search by title, author, or ISBN..." value="<%= currentSearch %>">
                </div>
                <div class="form-group">
                    <label for="category"><i class="fas fa-filter"></i> Category</label>
                    <select id="category" name="category" class="form-control">
                        <option value="all" <%= currentCategory === 'all' ? 'selected' : '' %>>All Categories</option>
                        <% categories.forEach(cat => { %>
                            <option value="<%= cat %>" <%= currentCategory === cat ? 'selected' : '' %>><%= cat %></option>
                        <% }) %>
                    </select>
                </div>
                <div class="form-group">
                    <label for="status"><i class="fas fa-info-circle"></i> Status</label>
                    <select id="status" name="status" class="form-control">
                        <option value="all" <%= currentStatus === 'all' ? 'selected' : '' %>>All Status</option>
                        <option value="Available" <%= currentStatus === 'Available' ? 'selected' : '' %>>Available</option>
                        <option value="Issued" <%= currentStatus === 'Issued' ? 'selected' : '' %>>Issued</option>
                    </select>
                </div>
            </div>
            <div style="margin-top: 20px; text-align: center;">
                <button type="button" id="clearFilters" class="btn" style="background: #6c757d; color: white;">
                    <i class="fas fa-times"></i> Clear Filters
                </button>
                <div id="loadingIndicator" style="display: none; margin-top: 10px;">
                    <i class="fas fa-spinner fa-spin"></i> Loading...
                </div>
            </div>
        </div>

        <!-- Books Display -->
        <div class="books-section">
            <h2 class="section-title">
                <i class="fas fa-library"></i> 
                Book Collection 
                <span id="bookCount" style="font-size: 1rem; font-weight: 400; color: #666;">
                    (<%= data.length %> books found)
                </span>
            </h2>

            <div id="booksContainer">
                <% if (data.length === 0) { %>
                    <div class="no-books">
                        <i class="fas fa-book-open"></i>
                        <h3>No books found</h3>
                        <p>Try adjusting your search criteria or add some books to get started.</p>
                    </div>
                <% } else { %>
                    <div class="books-grid" id="booksGrid">
                        <% data.forEach(book => { %>
                            <div class="book-card fade-in">
                                <div class="book-header">
                                    <div>
                                        <div class="book-title"><%= book.Name %></div>
                                        <div class="book-author">by <%= book.author %></div>
                                    </div>
                                    <div class="book-status <%= book.state === 'Available' ? 'status-available' : 'status-issued' %>">
                                        <%= book.state %>
                                    </div>
                                </div>

                                <div class="book-details">
                                    <div class="book-detail">
                                        <i class="fas fa-file-alt"></i>
                                        <span><%= book.pages %> pages</span>
                                    </div>
                                    <div class="book-detail">
                                        <i class="fas fa-rupee-sign"></i>
                                        <span>₹<%= book.price %></span>
                                    </div>
                                    <div class="book-detail">
                                        <i class="fas fa-tag"></i>
                                        <span><%= book.category %></span>
                                    </div>
                                    <div class="book-detail">
                                        <i class="fas fa-calendar"></i>
                                        <span><%= book.publishYear %></span>
                                    </div>
                                </div>

                                <% if (book.description) { %>
                                    <div class="book-description">
                                        "<%= book.description %>"
                                    </div>
                                <% } %>

                                <% if (book.state === 'Issued' && book.issuedTo) { %>
                                    <div class="book-detail" style="margin-bottom: 15px; color: #856404;">
                                        <i class="fas fa-user"></i>
                                        <span>Issued to: <%= book.issuedTo %></span>
                                    </div>
                                <% } %>

                                <div class="book-actions">
                                    <% if (book.state === 'Available') { %>
                                        <button class="btn btn-success btn-sm" 
                                                data-book-id="<%= book.id %>" 
                                                data-book-name="<%= book.Name %>" 
                                                onclick="openIssueModal(this.dataset.bookId, this.dataset.bookName)">
                                            <i class="fas fa-hand-holding"></i> Issue
                                        </button>
                                    <% } else { %>
                                        <form action="/return" method="post" style="display: inline;">
                                            <input type="hidden" name="id" value="<%= book.id %>">
                                            <button type="submit" class="btn btn-info btn-sm">
                                                <i class="fas fa-undo"></i> Return
                                            </button>
                                        </form>
                                    <% } %>
                                    
                                    <button class="btn btn-danger btn-sm" 
                                            data-book-id="<%= book.id %>" 
                                            data-book-name="<%= book.Name %>" 
                                            onclick="confirmDelete(this.dataset.bookId, this.dataset.bookName)">
                                        <i class="fas fa-trash"></i> Delete
                                    </button>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                <% } %>
            </div>
        </div>

        <!-- Add New Book Section -->
        <div class="add-book-section">
            <h2 class="section-title">
                <i class="fas fa-plus-circle"></i> Add New Book
            </h2>
            
            <form action="/" method="post" class="add-book-form">
                <div class="form-group">
                    <label for="Name">Book Title *</label>
                    <input type="text" id="Name" name="Name" class="form-control" required>
                </div>
                
                <div class="form-group">
                    <label for="author">Author *</label>
                    <input type="text" id="author" name="author" class="form-control" required>
                </div>
                
                <div class="form-group">
                    <label for="category">Category</label>
                    <select id="category" name="category" class="form-control">
                        <option value="General">General</option>
                        <option value="Fiction">Fiction</option>
                        <option value="Non-Fiction">Non-Fiction</option>
                        <option value="Science">Science</option>
                        <option value="Technology">Technology</option>
                        <option value="Business">Business</option>
                        <option value="Self-Help">Self-Help</option>
                        <option value="Biography">Biography</option>
                        <option value="History">History</option>
                        <option value="Finance">Finance</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="isbn">ISBN</label>
                    <input type="text" id="isbn" name="isbn" class="form-control" placeholder="978-0123456789">
                </div>
                
                <div class="form-group">
                    <label for="pages">Pages *</label>
                    <input type="number" id="pages" name="pages" class="form-control" min="1" required>
                </div>
                
                <div class="form-group">
                    <label for="price">Price (₹) *</label>
                    <input type="number" id="price" name="price" class="form-control" min="0" step="0.01" required>
                </div>
                
                <div class="form-group">
                    <label for="publishYear">Publish Year</label>
                    <input type="number" id="publishYear" name="publishYear" class="form-control" 
                           min="1000" max="<%= new Date().getFullYear() %>" value="<%= new Date().getFullYear() %>">
                </div>
                
                <div class="form-group form-row-full">
                    <label for="description">Description</label>
                    <textarea id="description" name="description" class="form-control" rows="3" 
                              placeholder="Brief description of the book..."></textarea>
                </div>
                
                <div class="form-group form-row-full" style="text-align: center;">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Add Book to Library
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Issue Book Modal -->
    <div id="issueModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2><i class="fas fa-hand-holding"></i> Issue Book</h2>
            <form id="issueForm" action="/issue" method="post">
                <input type="hidden" id="issueBookId" name="id">
                <div class="form-group" style="margin: 20px 0;">
                    <label for="bookTitle">Book:</label>
                    <input type="text" id="bookTitle" class="form-control" readonly>
                </div>
                <div class="form-group" style="margin: 20px 0;">
                    <label for="issuedTo">Issue to:</label>
                    <input type="text" id="issuedTo" name="issuedTo" class="form-control" 
                           placeholder="Enter student/member name" required>
                </div>
                <div style="text-align: center; margin-top: 25px;">
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-check"></i> Issue Book
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Modal functionality
        const modal = document.getElementById('issueModal');
        const span = document.getElementsByClassName('close')[0];

        function openIssueModal(bookId, bookName) {
            document.getElementById('issueBookId').value = bookId;
            document.getElementById('bookTitle').value = bookName;
            document.getElementById('issuedTo').value = '';
            modal.style.display = 'block';
        }

        span.onclick = function() {
            modal.style.display = 'none';
        }

        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        }

        function confirmDelete(bookId, bookName) {
            if (confirm(`Are you sure you want to delete "${bookName}"? This action cannot be undone.`)) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '/delete';
                
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'id';
                input.value = bookId;
                
                form.appendChild(input);
                document.body.appendChild(form);
                form.submit();
            }
        }

        // AJAX search/filter functionality
        const searchInput = document.getElementById('search');
        const categorySelect = document.getElementById('category');
        const statusSelect = document.getElementById('status');
        const clearFiltersButton = document.getElementById('clearFilters');
        const loadingIndicator = document.getElementById('loadingIndicator');
        const booksContainer = document.getElementById('booksContainer');
        const bookCountSpan = document.getElementById('bookCount');

        let searchTimeout;

        searchInput.addEventListener('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(searchBooks, 300);
        });
        
        categorySelect.addEventListener('change', searchBooks);
        statusSelect.addEventListener('change', searchBooks);
        clearFiltersButton.addEventListener('click', clearFilters);

        function searchBooks() {
            const searchQuery = searchInput.value.trim();
            const category = categorySelect.value;
            const status = statusSelect.value;

            loadingIndicator.style.display = 'block';

            const params = new URLSearchParams();
            if (searchQuery) params.append('search', searchQuery);
            if (category && category !== 'all') params.append('category', category);
            if (status && status !== 'all') params.append('status', status);

            const url = `/api/books?${params.toString()}`;
            console.log('Fetching:', url);

            fetch(url)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Data received:', data);
                renderBooks(data.books);
                updateStatistics(data.stats);
                bookCountSpan.textContent = `(${data.totalFound} books found)`;
                loadingIndicator.style.display = 'none';
            })
            .catch(error => {
                console.error('Fetch error:', error);
                loadingIndicator.style.display = 'none';
                
                // Fallback: reload the page with query parameters
                const params = new URLSearchParams();
                if (searchQuery) params.append('search', searchQuery);
                if (category && category !== 'all') params.append('category', category);
                if (status && status !== 'all') params.append('status', status);
                
                if (params.toString()) {
                    window.location.href = `/?${params.toString()}`;
                } else {
                    window.location.href = '/';
                }
            });
        }

        function renderBooks(books) {
            // Store current scroll position before clearing content
            const currentScrollY = window.scrollY;
            
            // Clear existing content
            booksContainer.innerHTML = '';

            if (books.length === 0) {
                booksContainer.innerHTML = `
                    <div class="no-books">
                        <i class="fas fa-book-open"></i>
                        <h3>No books found</h3>
                        <p>Try adjusting your search criteria or add some books to get started.</p>
                    </div>
                `;
                return;
            }

            // Create books grid
            const booksGrid = document.createElement('div');
            booksGrid.className = 'books-grid';
            booksGrid.id = 'booksGrid';

            books.forEach((book, index) => {
                const bookCard = document.createElement('div');
                bookCard.className = 'book-card fade-in';
                
                // Stagger animation for smooth appearance
                bookCard.style.animationDelay = `${index * 0.03}s`;

                bookCard.innerHTML = `
                    <div class="book-header">
                        <div>
                            <div class="book-title">${escapeHtml(book.Name)}</div>
                            <div class="book-author">by ${escapeHtml(book.author)}</div>
                        </div>
                        <div class="book-status ${book.state === 'Available' ? 'status-available' : 'status-issued'}">
                            ${book.state}
                        </div>
                    </div>

                    <div class="book-details">
                        <div class="book-detail">
                            <i class="fas fa-file-alt"></i>
                            <span>${book.pages} pages</span>
                        </div>
                        <div class="book-detail">
                            <i class="fas fa-rupee-sign"></i>
                            <span>₹${book.price}</span>
                        </div>
                        <div class="book-detail">
                            <i class="fas fa-tag"></i>
                            <span>${escapeHtml(book.category)}</span>
                        </div>
                        <div class="book-detail">
                            <i class="fas fa-calendar"></i>
                            <span>${book.publishYear}</span>
                        </div>
                    </div>

                    ${book.description ? `
                        <div class="book-description">
                            "${escapeHtml(book.description)}"
                        </div>
                    ` : ''}

                    ${book.state === 'Issued' && book.issuedTo ? `
                        <div class="book-detail" style="margin-bottom: 12px; color: #856404;">
                            <i class="fas fa-user"></i>
                            <span>Issued to: ${escapeHtml(book.issuedTo)}</span>
                        </div>
                    ` : ''}

                    <div class="book-actions">
                        ${book.state === 'Available' ? `
                            <button class="btn btn-success btn-sm" 
                                    data-book-id="${book.id}" 
                                    data-book-name="${escapeHtml(book.Name)}" 
                                    onclick="openIssueModal(this.dataset.bookId, this.dataset.bookName)">
                                <i class="fas fa-hand-holding"></i> Issue
                            </button>
                        ` : `
                            <form action="/return" method="post" style="display: inline;">
                                <input type="hidden" name="id" value="${book.id}">
                                <button type="submit" class="btn btn-info btn-sm">
                                    <i class="fas fa-undo"></i> Return
                                </button>
                            </form>
                        `}
                        <button class="btn btn-danger btn-sm" 
                                data-book-id="${book.id}" 
                                data-book-name="${escapeHtml(book.Name)}" 
                                onclick="confirmDelete(this.dataset.bookId, this.dataset.bookName)">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </div>
                `;

                booksGrid.appendChild(bookCard);
            });

            booksContainer.appendChild(booksGrid);
            
            // Remove loading class after content is rendered
            setTimeout(() => {
                booksGrid.classList.remove('loading');
            }, 50);
            
            // Restore scroll position to prevent jumping
            requestAnimationFrame(() => {
                window.scrollTo(0, currentScrollY);
            });
        }

        function updateStatistics(stats) {
            const statCards = document.querySelectorAll('.stat-card .stat-number');
            if (statCards.length >= 4) {
                statCards[0].textContent = stats.total;
                statCards[1].textContent = stats.available;
                statCards[2].textContent = stats.issued;
                statCards[3].textContent = stats.categories;
            }
        }

        function clearFilters() {
            searchInput.value = '';
            categorySelect.value = 'all';
            statusSelect.value = 'all';
            searchBooks();
        }

        function escapeHtml(text) {
            if (!text) return '';
            const map = {
                '&': '&amp;',
                '<': '&lt;',
                '>': '&gt;',
                '"': '&quot;',
                "'": '&#039;'
            };
            return String(text).replace(/[&<>"']/g, function(m) { return map[m]; });
        }

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Page loaded, AJAX filtering ready');
        });
    </script>
</body>
</html>
