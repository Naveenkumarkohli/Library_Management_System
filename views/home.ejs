<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Library Home</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    body { font-family: 'Inter', sans-serif; background: #f8fafc; margin: 0; padding: 20px; }
    .container { max-width: 1400px; margin: auto; }
    
    .header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px; background: white; padding: 20px 30px; border-radius: 16px; box-shadow: 0 4px 20px rgba(0,0,0,0.08); }
    .header h1 { margin: 0; color: #1a202c; font-size: 1.8rem; }
    .btn-logout { background: linear-gradient(135deg, #e53e3e 0%, #c53030 100%); color: white; padding: 12px 20px; border-radius: 10px; text-decoration: none; font-weight: 600; transition: transform 0.2s; }
    .btn-logout:hover { transform: translateY(-2px); }
    
    /* Admin Dashboard Styles */
    .admin-dashboard { margin-bottom: 30px; }
    .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); gap: 20px; margin-bottom: 30px; }
    .stat-card { background: white; padding: 25px; border-radius: 16px; box-shadow: 0 4px 20px rgba(0,0,0,0.08); text-align: center; transition: transform 0.3s; }
    .stat-card:hover { transform: translateY(-5px); }
    .stat-card h3 { margin: 0 0 10px 0; font-size: 2.5rem; font-weight: 700; }
    .stat-card p { margin: 0; color: #666; font-weight: 500; }
    .stat-card.books { border-left: 5px solid #667eea; }
    .stat-card.issued { border-left: 5px solid #e74c3c; }
    .stat-card.available { border-left: 5px solid #28a745; }
    .stat-card.users { border-left: 5px solid #17a2b8; }
    .stat-card.pending { border-left: 5px solid #ffc107; }
    
    .nav-cards { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 25px; }
    .nav-card { background: white; padding: 30px; border-radius: 16px; box-shadow: 0 4px 20px rgba(0,0,0,0.08); text-decoration: none; color: inherit; transition: all 0.3s; }
    .nav-card:hover { transform: translateY(-5px); box-shadow: 0 8px 30px rgba(0,0,0,0.15); text-decoration: none; color: inherit; }
    .nav-card-icon { font-size: 3rem; margin-bottom: 20px; }
    .nav-card h3 { margin: 0 0 15px 0; color: #333; }
    .nav-card p { margin: 0; color: #666; line-height: 1.5; }
    .nav-card.books-card { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; }
    .nav-card.books-card h3, .nav-card.books-card p { color: white; }
    .nav-card.users-card { background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); color: white; }
    .nav-card.users-card h3, .nav-card.users-card p { color: white; }
    .nav-card.admin-card { background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); color: white; }
    .nav-card.admin-card h3, .nav-card.admin-card p { color: white; }
    
    /* User Stats Section */
    .user-stats-section { margin-bottom: 40px; }
    .section-title { font-size: 1.5rem; font-weight: 700; color: #1a202c; margin-bottom: 20px; display: flex; align-items: center; gap: 10px; }
    .user-stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; }
    .user-stat-card { background: white; padding: 25px; border-radius: 16px; box-shadow: 0 4px 20px rgba(0,0,0,0.08); text-align: center; transition: transform 0.3s; }
    .user-stat-card:hover { transform: translateY(-3px); }
    .user-stat-card h3 { margin: 0 0 8px 0; font-size: 2.2rem; font-weight: 700; }
    .user-stat-card p { margin: 0; color: #666; font-weight: 500; font-size: 0.9rem; }
    .user-stat-card.currently { border-left: 5px solid #e74c3c; }
    .user-stat-card.total { border-left: 5px solid #667eea; }
    .user-stat-card.returned { border-left: 5px solid #28a745; }
    .user-stat-card.rate { border-left: 5px solid #17a2b8; }
    
    /* Modern Filter Section */
    .filter-section { background: white; padding: 30px; border-radius: 16px; box-shadow: 0 4px 20px rgba(0,0,0,0.08); margin-bottom: 30px; }
    .filter-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 25px; }
    .filter-header h2 { margin: 0; color: #1a202c; font-size: 1.3rem; }
    .filter-controls { display: grid; grid-template-columns: 2fr 1fr 1fr 1fr; gap: 20px; }
    
    .filter-group { position: relative; }
    .filter-group label { display: block; margin-bottom: 8px; font-weight: 600; color: #4a5568; font-size: 0.85rem; text-transform: uppercase; letter-spacing: 0.5px; }
    .filter-input { width: 100%; padding: 14px 16px; border: 2px solid #e2e8f0; border-radius: 12px; font-size: 15px; transition: all 0.3s; background: #f7fafc; }
    .filter-input:focus { outline: none; border-color: #667eea; background: white; box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1); }
    .filter-input:hover { border-color: #cbd5e0; }
    
    .search-input { background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="%23a0aec0" viewBox="0 0 24 24"><path d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/></svg>') no-repeat 16px center; background-size: 18px; padding-left: 50px; }
    
    .clear-btn { background: linear-gradient(135deg, #718096 0%, #4a5568 100%); color: white; border: none; padding: 14px 20px; border-radius: 12px; cursor: pointer; font-weight: 600; transition: all 0.3s; }
    .clear-btn:hover { transform: translateY(-2px); box-shadow: 0 4px 15px rgba(113, 128, 150, 0.4); }
    
    .results-info { display: flex; justify-content: space-between; align-items: center; margin: 20px 0; padding: 15px 20px; background: #f7fafc; border-radius: 12px; }
    .results-count { font-weight: 600; color: #4a5568; }
    
    /* Books Section */
    .books-section { margin-bottom: 30px; }
    .books-grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; max-width: 1200px; margin: 0 auto; }
    .book-card { 
      background: white; 
      padding: 15px; 
      border-radius: 16px; 
      box-shadow: 0 8px 25px rgba(0,0,0,0.1); 
      transition: transform 0.2s; 
      display: flex; 
      flex-direction: column; 
      min-height: 220px;
    }
    .book-card:hover { transform: translateY(-5px); }
    .book-card h3 { 
      margin: 0; 
      color: #333; 
      font-size: 1.1rem; 
      display: flex; 
      align-items: center; 
      gap: 10px; 
      margin-bottom: 10px;
    }
    .book-card h3 i { 
      font-size: 1.5rem; 
      color: #667eea; 
    }
    .book-card p { 
      margin: 4px 0; 
      color: #666; 
    }
    .book-card p strong { 
      color: #333; 
    }
    .status-badge { 
      display: inline-block; 
      padding: 6px 12px; 
      border-radius: 20px; 
      font-size: 12px; 
      font-weight: 600; 
      text-transform: uppercase; 
    }
    .status-available { background: #d4edda; color: #155724; }
    .status-issued { background: #f8d7da; color: #721c24; }
    .book-actions { 
      display: flex; 
      gap: 10px; 
      margin-top: auto; 
    }
    .btn-issue { 
      background: #28a745; 
      color: white; 
      border: none; 
      padding: 10px 16px; 
      border-radius: 6px; 
      cursor: pointer; 
      font-weight: 600; 
      flex: 1;
    }
    .btn-issue:hover { background: #218838; }
    .btn-return { 
      background: #007bff; 
      color: white; 
      border: none; 
      padding: 10px 16px; 
      border-radius: 6px; 
      cursor: pointer; 
      font-weight: 600; 
      flex: 1;
    }
    .btn-return:hover { background: #0056b3; }
    
    /* Pagination Styles for Home Page */
    .pagination-container { 
      display: flex; 
      justify-content: space-between; 
      align-items: center; 
      margin-top: 30px; 
      padding: 20px; 
      background: white; 
      border-radius: 16px; 
      box-shadow: 0 4px 20px rgba(0,0,0,0.08); 
    }
    .pagination-left { display: flex; align-items: center; gap: 10px; }
    .pagination-left label { font-weight: 600; color: #4a5568; }
    .pagination-left select { padding: 8px 12px; border: 2px solid #e2e8f0; border-radius: 8px; background: #f7fafc; }
    .pagination-center { display: flex; align-items: center; gap: 8px; }
    .pagination-btn { 
      padding: 8px 12px; 
      border: 2px solid #e2e8f0; 
      background: white; 
      color: #4a5568; 
      text-decoration: none; 
      border-radius: 8px; 
      font-weight: 500; 
      transition: all 0.2s;
    }
    .pagination-btn:hover { background: #f7fafc; border-color: #cbd5e0; text-decoration: none; color: #4a5568; }
    .pagination-btn.active { background: #667eea; color: white; border-color: #667eea; }
    .pagination-btn.disabled { opacity: 0.5; pointer-events: none; }
    .pagination-right { display: flex; align-items: center; gap: 10px; }
    .pagination-right input { padding: 8px 12px; border: 2px solid #e2e8f0; border-radius: 8px; width: 60px; text-align: center; background: #f7fafc; }
    .pagination-right button { 
      padding: 8px 16px; 
      background: #667eea; 
      color: white; 
      border: none; 
      border-radius: 8px; 
      cursor: pointer; 
      font-weight: 600; 
      transition: all 0.2s;
    }
    .pagination-right button:hover { background: #5a6fd8; transform: translateY(-1px); }
    
    .empty-state { text-align: center; padding: 60px 20px; color: #a0aec0; }
    .empty-state i { font-size: 4rem; margin-bottom: 20px; }
    .empty-state h3 { margin: 0 0 10px 0; color: #4a5568; }
    
    .flash { margin-bottom: 20px; padding: 15px 20px; border-radius: 12px; font-weight: 500; }
    .flash-success { background: #c6f6d5; color: #22543d; border-left: 4px solid #48bb78; }
    .flash-error { background: #fed7d7; color: #742a2a; border-left: 4px solid #e53e3e; }
    
    @media (max-width: 768px) {
      .filter-controls { grid-template-columns: 1fr; }
      .books-grid { grid-template-columns: 1fr; }
      .user-stats-grid { grid-template-columns: repeat(2, 1fr); }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1><i class="fas fa-book-reader"></i> Welcome, <%= user.username %></h1>
      <a href="/logout" class="btn-logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
    </div>

    <% if (success.length > 0) { %>
      <% success.forEach(msg => { %>
        <div class="flash flash-success"><i class="fas fa-check-circle"></i> <%= msg %></div>
      <% }) %>
    <% } %>
    <% if (error.length > 0) { %>
      <% error.forEach(msg => { %>
        <div class="flash flash-error"><i class="fas fa-exclamation-circle"></i> <%= msg %></div>
      <% }) %>
    <% } %>

    <% if (user.role === 'admin') { %>
      <!-- Admin Dashboard -->
      <div class="admin-dashboard">
        <h2 class="section-title"><i class="fas fa-tachometer-alt"></i> Admin Dashboard</h2>
        
        <div class="stats-grid">
          <div class="stat-card books">
            <h3><%= stats.totalBooks %></h3>
            <p><i class="fas fa-book"></i> Total Books</p>
          </div>
          <div class="stat-card available">
            <h3><%= stats.availableBooks %></h3>
            <p><i class="fas fa-check-circle"></i> Available</p>
          </div>
          <div class="stat-card issued">
            <h3><%= stats.issuedBooks %></h3>
            <p><i class="fas fa-hand-holding"></i> Issued</p>
          </div>
          <div class="stat-card users">
            <h3><%= stats.totalUsers %></h3>
            <p><i class="fas fa-users"></i> Total Users</p>
          </div>
          <div class="stat-card pending">
            <h3><%= stats.pendingRequests %></h3>
            <p><i class="fas fa-clock"></i> Pending Requests</p>
          </div>
        </div>

        <div class="nav-cards">
          <a href="/admin/books" class="nav-card books-card">
            <div class="nav-card-icon"><i class="fas fa-book"></i></div>
            <h3>Manage Books</h3>
            <p>Add, edit, and delete books from the library collection. View book statistics and manage availability.</p>
          </a>
          
          <a href="/admin/users" class="nav-card users-card">
            <div class="nav-card-icon"><i class="fas fa-users"></i></div>
            <h3>Manage Users</h3>
            <p>Add new users, approve registrations, and manage user accounts and permissions.</p>
          </a>
          
          <a href="/admin" class="nav-card admin-card">
            <div class="nav-card-icon"><i class="fas fa-cogs"></i></div>
            <h3>Admin Panel</h3>
            <p>Access the full admin panel with all management tools and system settings.</p>
          </a>
        </div>
      </div>
    <% } else { %>
      <!-- User Dashboard -->
      
      <!-- User Personal Stats -->
      <div class="user-stats-section">
        <h2 class="section-title"><i class="fas fa-chart-user"></i> My Library Statistics</h2>
        <div class="user-stats-grid">
          <div class="user-stat-card currently">
            <h3><%= userStats.currentlyIssued || 0 %></h3>
            <p><i class="fas fa-hand-holding"></i> Currently Reading</p>
          </div>
          <div class="user-stat-card total">
            <h3><%= userStats.totalIssued || 0 %></h3>
            <p><i class="fas fa-book-open"></i> Books Borrowed</p>
          </div>
          <div class="user-stat-card returned">
            <h3><%= userStats.totalReturned || 0 %></h3>
            <p><i class="fas fa-undo"></i> Books Returned</p>
          </div>
          <div class="user-stat-card rate">
            <h3><%= userStats.returnRate || 0 %>%</h3>
            <p><i class="fas fa-star"></i> Return Rate</p>
          </div>
        </div>
      </div>

      <!-- Search and Filter Section -->
      <div class="filter-section">
        <div class="filter-header">
          <h2><i class="fas fa-search"></i> Find Your Next Book</h2>
          <button class="clear-btn" onclick="clearFilters()">
            <i class="fas fa-refresh"></i> Reset Filters
          </button>
        </div>
        
        <div class="filter-controls">
          <div class="filter-group">
            <label>Search Books</label>
            <input type="text" id="searchInput" class="filter-input search-input" placeholder="Search by title or author...">
          </div>
          <div class="filter-group">
            <label>Category</label>
            <select id="categoryFilter" class="filter-input">
              <option value="">All Categories</option>
              <option value="Fiction">Fiction</option>
              <option value="Non-Fiction">Non-Fiction</option>
              <option value="Science">Science</option>
              <option value="History">History</option>
              <option value="Biography">Biography</option>
              <option value="Technology">Technology</option>
              <option value="Romance">Romance</option>
              <option value="Mystery">Mystery</option>
              <option value="Programming">Programming</option>
              <option value="Self-Help">Self-Help</option>
              <option value="Fantasy">Fantasy</option>
              <option value="Dystopia">Dystopia</option>
            </select>
          </div>
          <div class="filter-group">
            <label>Availability</label>
            <select id="statusFilter" class="filter-input">
              <option value="">All Books</option>
              <option value="Available">Available Only</option>
              <option value="Issued">Currently Issued</option>
              <option value="My Books">My Books</option>
            </select>
          </div>
          <div class="filter-group">
            <label>Sort By</label>
            <select id="sortFilter" class="filter-input">
              <option value="title">Title A-Z</option>
              <option value="author">Author A-Z</option>
              <option value="category">Category</option>
              <option value="status">Availability</option>
            </select>
          </div>
        </div>
        
        <div class="results-info">
          <div class="results-count">
            Showing <span id="visibleCount"><%= books.length %></span> of <span id="totalCount"><%= totalRecords || books.length %></span> books
          </div>
        </div>
      </div>

      <!-- Books Section -->
      <div class="books-section">
        <h2 class="section-title"><i class="fas fa-books"></i> Library Collection</h2>
        
        <% if (books.length > 0) { %>
          <div class="books-grid" id="booksContainer">
            <% books.forEach(book => { %>
              <div class="book-card" data-title="<%= book.title.toLowerCase() %>" data-author="<%= book.author.toLowerCase() %>" data-category="<%= book.category %>" data-status="<%= book.state %>" data-issued-to="<%= book.issuedTo || '' %>">
                <h3><i class="fas fa-book"></i> <%= book.title %></h3>
                <p><strong>Author:</strong> <%= book.author %></p>
                <p><strong>Category:</strong> <%= book.category %></p>
                <p><strong>Status:</strong> 
                  <span class="status-badge <%= book.state === 'Available' ? 'status-available' : 'status-issued' %>">
                    <%= book.state %>
                  </span>
                </p>
                <% if (book.state === 'Issued' && book.issuedTo && book.issuedTo !== user.username) { %>
                  <p><strong>Issued To:</strong> <%= book.issuedTo %></p>
                <% } %>
                <div class="book-actions">
                  <% if (book.state === 'Available') { %>
                    <form action="/issue" method="post" onsubmit="saveScrollPosition()" style="display: inline;">
                      <input type="hidden" name="id" value="<%= book._id %>">
                      <button type="submit" class="btn-issue">
                        <i class="fas fa-download"></i> Issue
                      </button>
                    </form>
                  <% } else if (book.state === 'Issued' && book.issuedTo === user.username) { %>
                    <form action="/return" method="post" onsubmit="saveScrollPosition()" style="display: inline;">
                      <input type="hidden" name="id" value="<%= book._id %>">
                      <button type="submit" class="btn-return">
                        <i class="fas fa-upload"></i> Return
                      </button>
                    </form>
                  <% } %>
                </div>
              </div>
            <% }) %>
          </div>

          <!-- Pagination Controls -->
          <div class="pagination-container">
            <div class="pagination-left">
              <label>Books Per Page:</label>
              <select id="recordsPerPage" onchange="changeRecordsPerPage()">
                <option value="3" <%= (recordsPerPage || 3) == 3 ? 'selected' : '' %>>3</option>
                <option value="6" <%= (recordsPerPage || 3) == 6 ? 'selected' : '' %>>6</option>
                <option value="9" <%= (recordsPerPage || 3) == 9 ? 'selected' : '' %>>9</option>
                <option value="12" <%= (recordsPerPage || 3) == 12 ? 'selected' : '' %>>12</option>
              </select>
            </div>
            
            <div class="pagination-center">
              <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>&limit=<%= recordsPerPage || 3 %>" class="pagination-btn">← Prev</a>
              <% } else { %>
                <span class="pagination-btn disabled">← Prev</span>
              <% } %>
              
              <% for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
                <a href="?page=<%= i %>&limit=<%= recordsPerPage || 3 %>" 
                   class="pagination-btn <%= i === currentPage ? 'active' : '' %>"><%= i %></a>
              <% } %>
              
              <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>&limit=<%= recordsPerPage || 3 %>" class="pagination-btn">Next →</a>
              <% } else { %>
                <span class="pagination-btn disabled">Next →</span>
              <% } %>
            </div>
            
            <div class="pagination-right">
              <label>Go to:</label>
              <input type="number" id="gotoPage" min="1" max="<%= totalPages %>" placeholder="<%= currentPage %>">
              <button onclick="gotoPage()">Go</button>
            </div>
          </div>
        <% } else { %>
          <div class="empty-state">
            <i class="fas fa-book"></i>
            <h3>No books available</h3>
            <p>Check back later for new additions to our library collection.</p>
          </div>
        <% } %>
        
        <div id="noResults" class="empty-state" style="display: none;">
          <i class="fas fa-search"></i>
          <h3>No books found</h3>
          <p>Try adjusting your search criteria or filters to find what you're looking for.</p>
        </div>
      </div>
    <% } %>
  </div>

  <script>
    // Pagination Functions
    function changeRecordsPerPage() {
      const recordsPerPage = document.getElementById('recordsPerPage').value;
      const urlParams = new URLSearchParams(window.location.search);
      urlParams.set('limit', recordsPerPage);
      urlParams.set('page', '1');
      window.location.search = urlParams.toString();
    }
    
    function gotoPage() {
      const page = document.getElementById('gotoPage').value;
      const recordsPerPage = document.getElementById('recordsPerPage').value;
      if (page && page >= 1 && page <= <%= totalPages || 1 %>) {
        window.location.href = `?page=${page}&limit=${recordsPerPage}`;
      }
    }

    // Search and Filter Functionality (now works with pagination)
    function filterBooks() {
      const searchTerm = document.getElementById('searchInput').value.toLowerCase();
      const categoryFilter = document.getElementById('categoryFilter').value;
      const statusFilter = document.getElementById('statusFilter').value;
      const sortFilter = document.getElementById('sortFilter').value;
      const currentUser = '<%= user.username %>';
      
      const bookCards = Array.from(document.querySelectorAll('.book-card'));
      let visibleBooks = [];
      
      bookCards.forEach(card => {
        const title = card.getAttribute('data-title');
        const author = card.getAttribute('data-author');
        const category = card.getAttribute('data-category');
        const status = card.getAttribute('data-status');
        const issuedTo = card.getAttribute('data-issued-to');
        
        let showCard = true;
        
        // Search filter (title or author)
        if (searchTerm && !title.includes(searchTerm) && !author.includes(searchTerm)) {
          showCard = false;
        }
        
        // Category filter
        if (categoryFilter && category !== categoryFilter) {
          showCard = false;
        }
        
        // Status filter
        if (statusFilter) {
          if (statusFilter === 'Available' && status !== 'Available') {
            showCard = false;
          } else if (statusFilter === 'Issued' && status !== 'Issued') {
            showCard = false;
          } else if (statusFilter === 'My Books' && issuedTo !== currentUser) {
            showCard = false;
          }
        }
        
        if (showCard) {
          card.style.display = 'flex';
          visibleBooks.push(card);
        } else {
          card.style.display = 'none';
        }
      });
      
      // Sort books
      if (sortFilter && visibleBooks.length > 0) {
        visibleBooks.sort((a, b) => {
          let aValue, bValue;
          
          switch (sortFilter) {
            case 'title':
              aValue = a.getAttribute('data-title');
              bValue = b.getAttribute('data-title');
              break;
            case 'author':
              aValue = a.getAttribute('data-author');
              bValue = b.getAttribute('data-author');
              break;
            case 'category':
              aValue = a.getAttribute('data-category');
              bValue = b.getAttribute('data-category');
              break;
            case 'status':
              aValue = a.getAttribute('data-status');
              bValue = b.getAttribute('data-status');
              break;
            default:
              return 0;
          }
          
          return aValue.localeCompare(bValue);
        });
        
        // Reorder DOM elements
        const container = document.getElementById('booksContainer');
        visibleBooks.forEach(card => container.appendChild(card));
      }
      
      // Update counters
      const totalBooks = <%= totalRecords || books.length %>;
      const visibleCount = visibleBooks.length;
      
      document.getElementById('visibleCount').textContent = visibleCount;
      document.getElementById('totalCount').textContent = totalBooks;
      
      // Show/hide no results message
      const noResults = document.getElementById('noResults');
      if (visibleCount === 0) {
        noResults.style.display = 'block';
      } else {
        noResults.style.display = 'none';
      }
    }

    function clearFilters() {
      document.getElementById('searchInput').value = '';
      document.getElementById('categoryFilter').value = '';
      document.getElementById('statusFilter').value = '';
      document.getElementById('sortFilter').value = 'title';
      filterBooks();
    }

    function saveScrollPosition() {
      const scrollPosition = window.scrollY;
      document.cookie = `scrollPosition=${scrollPosition}; path=/`;
    }

    // Event listeners
    <% if (user.role !== 'admin') { %>
      document.getElementById('searchInput').addEventListener('input', filterBooks);
      document.getElementById('categoryFilter').addEventListener('change', filterBooks);
      document.getElementById('statusFilter').addEventListener('change', filterBooks);
      document.getElementById('sortFilter').addEventListener('change', filterBooks);
    <% } %>

    // Initialize on page load
    document.addEventListener('DOMContentLoaded', function() {
      <% if (user.role !== 'admin') { %>
        filterBooks();
      <% } %>
      const scrollPosition = document.cookie.match(/scrollPosition=([^;]*)/);
      if (scrollPosition) {
        window.scrollTo(0, parseInt(scrollPosition[1]));
      }
    });
  </script>
</body>
</html>
